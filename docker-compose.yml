services:
  db:
    image: postgres
    env_file:
      - .env
    environment:
      - PGDATA=/var/lib/postgresql/data/pgdata
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD?Variable not set}
      - POSTGRES_USER=${POSTGRES_USER?Variable not set}
      - POSTGRES_DB=${POSTGRES_DB?Variable not set}
    volumes:
      - postgres-data:/var/lib/postgresql/data  # Данные будут сохраняться после перезапуска контейнера
    ports:
      - "5432:5432"  # Проброс порта из контейнера на хост

  backend:
    image: 'backend'
    depends_on:
      - db
    env_file:
      - .env
    environment:
      - POSTGRES_SERVER=db
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER?Variable not set}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD?Variable not set}
      - DOMAIN=${DOMAIN}
      - ENVIRONMENT=development  # Можно указать development
      - FIRST_SUPERUSER=${FIRST_SUPERUSER?Variable not set}
      - FIRST_SUPERUSER_PASSWORD=${FIRST_SUPERUSER_PASSWORD?Variable not set}
      - SECRET_KEY=${SECRET_KEY?Variable not set}
    build: 
      context: ./backend
    ports:
      - '8888:8888'
    volumes:
      - ./backend:/app  # Монтируем локальную папку с кодом в контейнер
    command: ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8888", "--reload"]  # hot-reload для FastAPI

  pgadmin:
    container_name: pgadmin_pdf
    image: dpage/pgadmin4 
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_PASSWORD}
    ports:
      - 5050:80
    depends_on:
      - db

volumes:
  postgres-data:
