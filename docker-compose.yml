version: '3.8'

services:
  db:
    image: postgres
    env_file:
      - .env
    environment:
      - PGDATA=/var/lib/postgresql/data/pgdata
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5433:5432"

  backend:
    image: 'backend'
    depends_on:
      - db
    env_file:
      - .env
    environment:
      - POSTGRES_SERVER=db
      - POSTGRES_PORT=5432
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - DOMAIN=${DOMAIN}
      - ENVIRONMENT=production
      - FIRST_SUPERUSER=${FIRST_SUPERUSER}
      - FIRST_SUPERUSER_PASSWORD=${FIRST_SUPERUSER_PASSWORD}
      - SECRET_KEY=${SECRET_KEY}
    build:
      context: ./backend
    volumes:
      - ./backend:/app
    command: ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8888"]

  pgadmin:
    container_name: pgadmin_pdf
    image: dpage/pgadmin4
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_PASSWORD}
    ports:
      - 5050:80
    depends_on:
      - db

  frontend:
    build:
      context: ./frontend  # Путь к вашему React приложению
    volumes:
      - frontend-data:/app/build  # Общий том для собранных файлов
    command: ["npm", "run", "build"]  # Соберите приложение

volumes:
  postgres-data:
  frontend-data:  # Общий том для доступа к собранным файлам
